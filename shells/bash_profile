# Functions {{{
### Retrieve current virtualenv info
function get_virtualenv() {
  [[ -n "$VIRTUAL_ENV" ]] && echo "($(basename "$VIRTUAL_ENV"))"
}

### Set flags for converting GitHub Markdown to HTML5 with Pandoc
function pandocmark() {
  [[ "$#" -eq 1 ]] || { echo "Usage: pandocmark infile.md"; return; }
  infile=$1
  outfile=$(basename "$infile")
  outfile=${outfile%.*}.html
  pandoc -f markdown_github -t html5 "$infile" -o "$outfile"
  open "$outfile"
}
# }}}

# Options {{{
### Append to history file instead of overwriting
shopt -s histappend
### Increase session and persisted history sizes
HISTSIZE=10000
HISTFILESIZE=10000
# }}}

# Exports {{{
export CLICOLOR=1
export EDITOR="vim"
# }}}

# Tab Completion {{{
### Enable Git Bash completion
GIT_COMPLETION="/usr/local/etc/bash_completion.d/git-completion.bash"
[[ -f "$GIT_COMPLETION" ]] && source "$GIT_COMPLETION"
### Enable Git prompt
GIT_PROMPT="/usr/local/etc/bash_completion.d/git-prompt.sh"
[[ -f "$GIT_PROMPT" ]] && source "$GIT_PROMPT"
### Enable Hub Bash completion
HUB_COMPLETION="/usr/local/etc/bash_completion.d/hub.bash_completion.sh"
[[ -f "$HUB_COMPLETION" ]] && source "$HUB_COMPLETION"
### Enable Homebrew Bash completion
if hash brew 2>/dev/null; then
  BREW_COMPLETION="`brew --repository`/Library/Contributions/brew_bash_completion.sh"
  [[ -f "$BREW_COMPLETION" ]] && source "$BREW_COMPLETION"
fi
# }}}

# Prompt {{{
# Reset
Color_Off='\e[0m'
# Regular Colors
Black='\e[0;30m'
Red='\e[0;31m'
Green='\e[0;32m'
Yellow='\e[0;33m'
Blue='\e[0;34m'
Purple='\e[0;35m'
Cyan='\e[0;36m'
White='\e[0;37m'

# Git PS1 Options {{{
# * indicates repo with unstaged changes
# + indicates repo with staged changes
GIT_PS1_SHOWDIRTYSTATE=1

# $ indicates repo with stashed changes
GIT_PS1_SHOWSTASHSTATE=1

# % indicates repo with untracked files
GIT_PS1_SHOWUNTRACKEDFILES=1

# see more information about the identity of commits checked out as a detached HEAD
GIT_PS1_DESCRIBE_STYLE="branch"

# colored hint about the current dirty state
GIT_PS1_SHOWCOLORHINTS=1

# show difference between HEAD and its upstream
# "<" indicates you are behind
# ">" indicates you are ahead
# "<>" indicates you have diverged
# "=" indicates that there is no difference
GIT_PS1_SHOWUPSTREAM="auto git"
# }}}

# Display path, git info, and prompt character
PROMPT_COMMAND='__git_ps1 "$(get_virtualenv)\[$Blue\]\w\[$Color_Off\]" " \[$Green\]\\\$\[$Color_Off\] "'
# }}}

# Aliases {{{
### Enable colourized output for listing directory contents, append '/' to directories, and extra symbols after various filetypes for differentiation
alias ls='ls -FAh'

### Create shorthand for git
alias g='git'
__git_complete g __git_main

### Alias [hub](https://hub.github.com) to git
if hash hub 2>/dev/null; then
  eval "$(hub alias -s)"
fi

### Launch iOS Simulator
SIMULATOR='/Applications/Xcode.app/Contents/Developer/Applications/iOS Simulator.app/'
alias ios='open "$SIMULATOR"'

### Pretty print JSON
alias json='python -m json.tool'
# }}}

# Extras {{{
### Use ~/.bashrc to extend ~/.bash_profile with custom options
if [[ -f ~/.bashrc ]]; then
  source ~/.bashrc
fi
# }}}

# vim:ft=sh:fdm=marker
